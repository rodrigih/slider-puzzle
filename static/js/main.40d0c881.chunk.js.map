{"version":3,"sources":["logo.svg","Board.js","Game.js","AnswerGrids.js","Options.js","App.js","index.js"],"names":["module","exports","__webpack_require__","p","Square","props","colour","isAnswer","value","react_default","a","createElement","className","Board","val","i","key","this","_this","grid","boardClass","rowClass","isClickable","concat","onClick","handleBoardClick","map","curr","renderSquare","bind","drawGrid","Component","Game","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","emptyPos","highScore","moves","isSolved","moveSquareVertical","direction","row","column","slice","newGrid","newRow","movingSquare","newEmptyPos","moveSquareHorizontal","newColumn","shuffle","c","directions","newState","ind","Math","floor","random","handleShuffleClick","assertThisInitialized","document","addEventListener","handleOnKeyUp","removeEventListener","prevProps","ansInd","setState","answerGrid","length","col","e","replace","toLowerCase","checkIfSolved","_this2","statusClass","style","padding","marginRight","title","src_Board_0","marginTop","onKeyPress","handleOnKeyPress","handleOptionsClick","solvePuzzle","Answers","Options","handlePrevClick","handleNextClick","totalPages","ceil","page","prevBtnClass","nextBtnClass","start","row1Boards","row2Boards","row1","row2","optionsClass","handleCloseClick","App","src","logo","alt","src_Options_0","src_Game_0","color","id","ReactDOM","render","src_App_0","getElementById"],"mappings":"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","file":"static/js/main.40d0c881.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React, { Component } from 'react';\nimport './Board.css'; \n\nfunction Square(props){\n  var colour;\n  if (props.isAnswer){\n    colour = ( props.value === null ? \"blank-square\" : \"white-square\");\n  }\n  else if (props.value === null) {\n    colour = \"\";\n  }\n  else{\n    colour = ( props.value % 2 === 0 ? \"red-square\" : \"beige-square\" );\n  }\n  return (\n      <div className={colour}>\n        {props.value}\n      </div>\n  );\n} \n\nclass Board extends Component{ \n  renderSquare(val, i){ \n      return (\n        <Square\n          key={i}\n          value={val}\n          isAnswer={this.props.isAnswer}\n        />\n      ); \n  }\n\n  drawGrid(){\n    const grid = this.props.grid; \n    var boardClass = ( this.props.isAnswer ? \"Board-answer\" : \"Board-game\");\n    var rowClass = ( this.props.isAnswer ? \"Board-answer-row\" : \"Board-game-row\");\n\n    if (this.props.isClickable){\n      boardClass += \" Board-clickable\";\n    }\n\n    return (\n      <div className={`inline-flex flex-column ${boardClass}`}\n        onClick={this.props.handleBoardClick}\n      >\n        {grid.map(\n          (curr, i) => (\n            <div className={`flex Board-row ${rowClass}`} key={`row${i}`}>\n              {curr.map(this.renderSquare.bind(this))}\n            </div>)\n         )\n        }\n      </div>\n    ); \n  } \n\n  render(){\n    return this.drawGrid();\n  }\n}\n\nexport default Board;\n","import React, { Component } from 'react';\nimport './Game.css';\nimport Board from './Board.js'; \n\nclass Game extends Component {\n  constructor(props){\n    super(props); \n\n    /* Set initial state */\n    this.state = {\n      grid: [\n        [1, 2, 3, 4],\n        [5, 6, 7, 8],\n        [9, 10, 11, 12],\n        [13, 14, 15, null]\n      ], \n\n      emptyPos: [3,3],\n\n      highScore: 0,\n\n      moves: 0,\n\n      isSolved: false\n    }; \n\n    /* Define functions to move squares here so grid can be randomized on initialization */ \n    this.moveSquareVertical = function(direction, grid, emptyPos, moves){\n      const row = emptyPos[0];\n      const column = emptyPos[1]; \n\n      // Do nothing if move is invalid\n      if ( (direction === \"up\" && row === 3) || (direction === \"down\" && row === 0) ) {\n        return {grid: grid.slice(), emptyPos: emptyPos.slice(), moves: moves};\n      }\n\n      var newGrid = grid.slice(); \n      var newRow = ( direction === \"up\" ? (row + 1) : (row - 1) ); \n\n      var movingSquare = newGrid[newRow][column];\n      var newEmptyPos = [newRow, column]; \n\n      newGrid[newRow][column] = null;\n      newGrid[row][column] = movingSquare; \n\n      return {\n        grid: newGrid,\n        emptyPos: newEmptyPos,\n        moves: (moves + 1)\n      };\n    }\n\n    this.moveSquareHorizontal = function(direction, grid, emptyPos, moves){\n      const row = emptyPos[0];\n      const column = emptyPos[1]; \n\n      // Do nothing if move is invalid\n      if ( (direction === \"left\" && column === 3) || (direction === \"right\" && column === 0) ) {\n        return {grid: grid.slice(), emptyPos: emptyPos.slice(), moves: moves};\n      }\n\n      var newGrid = grid.slice(); \n      var newColumn = ( direction === \"right\" ? (column - 1) : (column + 1) );\n\n      var movingSquare = newGrid[row][newColumn];\n      var newEmptyPos = [row, newColumn]; \n\n      newGrid[row][newColumn] = null;\n      newGrid[row][column] = movingSquare; \n\n      return {\n        grid: newGrid,\n        emptyPos: newEmptyPos,\n        moves: (moves + 1)\n      }; \n    } \n\n    this.shuffle = function(){ \n      var grid = this.state.grid.map((c) => c.slice());\n      var emptyPos = this.state.emptyPos.slice();\n\n      var directions = [\"up\", \"down\", \"left\", \"right\"];\n\n      // Perform a random number of moves to shuffle the board\n      for(var i = 0; i < 200; i++){ \n        var ind = Math.floor( Math.random() * 4);\n\n        var direction = directions[ind];\n\n        var newState;\n\n        if (ind < 2) {\n          newState = this.moveSquareVertical(direction, grid, emptyPos, 0);\n        }\n        else{\n          newState = this.moveSquareHorizontal(direction, grid, emptyPos, 0);\n        }\n\n        grid = newState.grid;\n        emptyPos = newState.emptyPos;\n      } \n\n      return {\n        grid: grid,\n        emptyPos: emptyPos,\n        isSolved: false,\n        moves: 0 \n      };\n    } \n\n    // Bind event handlers\n    this.handleShuffleClick = this.handleShuffleClick.bind(this);\n\n    // Shuffle board when intializing\n    var newState = this.shuffle();\n    this.state.grid = newState.grid; \n    this.state.emptyPos = newState.emptyPos; \n  }\n\n  /* Life Cycle Functions */\n  componentDidMount(){\n    document.addEventListener(\"keyup\", this.handleOnKeyUp.bind(this)); \n  }\n\n  componentWillUnmount(){\n    document.removeEventListener(\"keyup\", this.handleOnKeyUp.bind(this));\n  } \n\n  /* Reset the game board if the answer board was changed */\n  componentDidUpdate(prevProps){\n    if(prevProps.ansInd !== this.props.ansInd){\n      var newState = this.shuffle();\n      newState.moves = 0;\n      this.setState(newState);\n    }\n  }\n\n  checkIfSolved(){ \n    const grid = this.state.grid.slice();\n    const answerGrid = this.props.answerGrid.grid.slice();\n\n    var isSolved = true;\n\n    for(var row = 0; row < grid.length; row++){ \n      for(var col = 0; col < grid.length; col++){ \n        if (grid[row][col] !== answerGrid[row][col]) {\n          isSolved = false;\n          break;\n        }\n      }\n    } \n\n    var highScore = this.state.highScore;\n    const moves = this.state.moves;\n\n    if (isSolved && (highScore == 0 ||  moves < highScore) ){\n      highScore = moves;\n    }\n\n    this.setState({\n      isSolved: isSolved,\n      highScore: highScore\n    });\n  }\n\n  handleOnKeyUp(e){\n    if (this.state.isSolved) {\n      return;\n    }\n\n    var direction = e.key.replace(\"Arrow\",\"\").toLowerCase();\n\n    var newState;\n\n    switch(e.key){\n      case \"ArrowUp\":\n      case \"ArrowDown\":\n        newState = this.moveSquareVertical(direction, this.state.grid, this.state.emptyPos, this.state.moves);\n        break;\n\n      case \"ArrowLeft\":\n      case \"ArrowRight\":\n        newState = this.moveSquareHorizontal(direction, this.state.grid, this.state.emptyPos, this.state.moves);\n        break;\n\n      default:\n        newState = this.state;\n    }\n\n    this.setState(newState);\n\n    this.checkIfSolved();\n  } \n\n  handleShuffleClick(){\n    var newState = this.shuffle();\n    this.setState(newState);\n  }\n\n  solvePuzzle(){ \n    var answerGrid = this.props.answerGrid.grid.map((c) => c.slice());\n    var emptyPos = this.props.answerGrid.emptyPos.slice();\n    var newState = {\n      grid: answerGrid,\n      emptyPos: emptyPos,\n      isSolved: true\n    };\n\n    this.setState(newState);\n  }\n\n  render(){\n    var statusClass = \"game-state\"; \n\n    if (! this.state.isSolved) {\n      statusClass += \" hidden\";\n    } \n\n    return (\n      <div className=\"Game\">\n        <div className={statusClass} style={{padding: \"1em 0\"}}>\n          <p> Puzzle is solved! </p>\n          <button className=\"btn\" onClick={this.handleShuffleClick}>\n            Retry\n          </button>\n        </div>\n\n        <div className=\"Game flex justify-center\">\n          <div style={{marginRight: \"2em\"}}>\n            {this.props.answerGrid.title}\n            <Board\n              grid={this.props.answerGrid.grid}\n              isAnswer={true}\n            />\n          </div>\n\n          <div style={{marginTop: \"auto\"}}>\n            <Board\n              grid={this.state.grid}\n              onKeyPress={this.handleOnKeyPress}\n              isAnswer={false}\n            /> \n          </div>\n        </div>\n\n        <div className=\"move-counter\">\n          High score: {this.state.highScore}\n        </div>\n\n        <div className=\"move-counter\">\n          Moves: {this.state.moves}\n        </div>\n\n        <div className=\"divider\"> </div> \n\n        <div className=\"flex justify-center btn-container\">\n          <button className=\"btn\" onClick={this.props.handleOptionsClick}> Options </button>\n\n          <button className=\"btn\" onClick={() => this.solvePuzzle()} > Solve </button>\n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default Game;\n","import React from 'react';\n\nconst Answers = [\n  {\n    title: (<p> 1 to 15 </p>),\n    grid: [\n      [1, 2, 3, 4],\n      [5, 6, 7, 8],\n      [9, 10, 11, 12],\n      [13, 14, 15, null]\n    ],\n    emptyPos: [3, 3]\n  },\n\n  {\n    title: (<p> 15 to 1 </p>),\n    grid: [\n      [null, 15, 14, 13],\n      [12, 11, 10, 9],\n      [8, 7, 6, 5],\n      [4, 3, 2, 1]\n    ],\n    emptyPos: [0, 0]\n  },\n\n  {\n    title: (<p> 1 to 15 <br /> from top to bottom </p>),\n    grid: [\n      [1, 5, 9, 13],\n      [2, 6, 10, 14],\n      [3, 7, 11, 15],\n      [4, 8, 12, null]\n    ],\n    emptyPos: [3, 3]\n  }, \n\n  {\n    title: (<p> 15 to 1 <br /> from top to bottom </p>),\n    grid: [\n      [12, 13, 14, 15],\n      [8, 9, 10, 11],\n      [4, 5, 6, 7],\n      [1, 2, 3, null]\n    ],\n    emptyPos: [3, 3]\n  },\n\n  {\n    title: (<p> 1 to 15 vertical <br /> from bottom to top </p>),\n    grid: [\n      [null, 12, 8, 4],\n      [15, 11, 7, 3],\n      [14, 10, 6, 2],\n      [13, 9, 5, 1]\n    ],\n    emptyPos: [0, 0]\n  },\n\n  {\n    title: (<p> 1 to 15 (right-hand corner) <br /> from top to bottom </p>),\n    grid: [\n      [4, 3, 2, 1],\n      [8, 7, 6, 5],\n      [12, 11, 10, 9],\n      [null, 13, 14, 15]\n    ],\n    emptyPos: [3, 0]\n  },\n\n  {\n    title: (<p> 1 to 15 continuous <br /> from bottom to top </p>),\n    grid: [\n      [4, 5, 12, 13],\n      [3, 6, 11, 14],\n      [2, 7, 10, 15],\n      [1, 8, 9, null]\n    ],\n    emptyPos: [3, 3]\n  },\n\n  {\n    title: (<p> 1 to 15 continuous (reversed) <br /> from top to bottom </p>),\n    grid: [\n      [null, 9, 8, 1],\n      [15, 10, 7, 2],\n      [14, 11, 6, 3],\n      [13, 12, 5, 4]\n    ],\n    emptyPos: [0, 0]\n  },\n\n  {\n    title: (<p> 1 to 15 horizontal <br /> from bottom to top </p>),\n    grid: [\n      [null, 15, 14, 13],\n      [9, 10, 11, 12],\n      [5, 6, 7, 8],\n      [1, 2, 3, 4]\n    ],\n    emptyPos: [0, 0]\n  },\n\n  {\n    title: (<p> 1 to 15 around <br /> and in and out </p>),\n    grid: [\n      [1, 2, 3, null],\n      [15, 14, 13, 4],\n      [10, 11, 12, 5],\n      [9, 8, 7, 6]\n    ],\n    emptyPos: [0, 3]\n  },\n\n  {\n    title: (<p> Diagonal from lower <br /> left-hand corner </p>),\n    grid: [\n      [7, 11, 14, null],\n      [4, 8, 12, 15],\n      [2, 5, 9, 13],\n      [1, 3, 6, 10]\n    ],\n    emptyPos: [0, 3]\n  },\n\n  {\n    title: (<p> Diagonal from upper <br /> right-hand corner </p>),\n    grid: [\n      [7, 4, 2, 1],\n      [11, 8, 5, 3],\n      [14, 12, 9, 6],\n      [null, 15, 13, 10]\n    ],\n    emptyPos: [3, 0]\n  },\n\n  {\n    title: (<p> Left spiral from center </p>),\n    grid: [\n      [7, 8, 9, 10],\n      [6, 1, 2, 11],\n      [5, 4, 3, 12],\n      [null, 15, 14, 13]\n    ],\n    emptyPos: [3, 0]\n  },\n\n  {\n    title: (<p> Right spiral from center </p>),\n    grid: [\n      [13, 14, 15, null],\n      [12, 3, 4, 5],\n      [11, 2, 1, 6],\n      [10, 9, 8, 7]\n    ],\n    emptyPos: [0, 3]\n  },\n\n  {\n    title: (<p> Odd on top <br /> even on bottom </p>),\n    grid: [\n      [1, 3, 5, 7],\n      [9, 11, 13, 15],\n      [2, 4, 6, 8],\n      [10, 12, 14, null]\n    ],\n    emptyPos: [3, 3]\n  },\n\n  {\n    title: (<p> Even on top <br /> odd on bottom </p>),\n    grid: [\n      [2, 4, 6, 8],\n      [10, 12, 14, null],\n      [1, 3, 5, 7],\n      [9, 11, 13, 15]\n    ],\n    emptyPos: [1, 3]\n  },\n\n  {\n    title: (<p> Odd on top <br /> even on bottom (reversed) </p>),\n    grid: [\n      [15, 13, 11, 9],\n      [1, 3, 5, 7],\n      [14, 12, 10, 8],\n      [null, 2, 4, 6]\n    ],\n    emptyPos: [3, 0]\n  },\n\n  {\n    title: (<p> Odd left  <br /> even right </p>),\n    grid: [\n      [1, 3, 2, 4],\n      [5, 7, 6, 8],\n      [9, 10, 13, 14],\n      [13, 15, 14, null]\n    ],\n    emptyPos: [3, 3]\n  },\n\n  {\n    title: (<p> Alternate odd line  <br /> and even line </p>),\n    grid: [\n      [1, 3, 5, 7],\n      [2, 4, 5, 8],\n      [9, 11, 13, 15],\n      [10, 12, 14, null]\n    ],\n    emptyPos: [3, 3]\n  },\n\n  {\n    title: (<p> Alternating  <br /> right to left </p>),\n    grid: [\n      [2, 4, 1, 3],\n      [6, 8, 5, 7],\n      [10, 12, 9, 11],\n      [14, null, 13, 15]\n    ],\n    emptyPos: [3, 1]\n  },\n\n  {\n    title: (<p> Zigzag 1 to 15 </p>),\n    grid: [\n      [1, 2, 5, 6],\n      [3, 4, 7, 8],\n      [9, 10, 13, 14],\n      [11, 12, 15, null]\n    ],\n    emptyPos: [3, 3]\n  },\n\n  {\n    title: (<p> Zigzag on left <br /> continuous on right </p>),\n    grid: [\n      [1, 2, 14, 13],\n      [3, 4, 15, 12],\n      [5, 6, null, 11],\n      [7, 8, 9, 10]\n    ],\n    emptyPos: [2, 2]\n  },\n\n  {\n    title: (<p> Zigzag down left <br /> up right </p>),\n    grid: [\n      [1, 2, null, 15],\n      [3, 4, 13, 14],\n      [5, 6, 12, 11],\n      [7, 8, 9, 10]\n    ],\n    emptyPos: [0, 2]\n  },\n\n  {\n    title: (<p> Adds to 34 in all directions <br /> (blank counts as 16)</p>),\n    grid: [\n      [13, 1, 12, 8],\n      [4, null, 5, 9],\n      [7, 11, 2, 14],\n      [10, 6, 15, 3]\n    ],\n    emptyPos: [1, 1]\n  },\n\n  {\n    title: (<p> Adds to 30 <br /> in all directions </p>),\n    grid: [\n      [12, 2, 1, 15],\n      [7, 9, 10, 4],\n      [11, 5, 6, 8],\n      [null, 14, 13, 3]\n    ],\n    emptyPos: [3, 0]\n  },\n\n  {\n    title: (<p> Around the edges </p>),\n    grid: [\n      [1, 2, 3, 4],\n      [12, 13, 14, 5],\n      [11, null, 15, 6],\n      [10, 9, 8, 7]\n    ],\n    emptyPos: [2, 2]\n  },\n\n  {\n    title: (<p> Around the edges <br /> from bottom </p>),\n    grid: [\n      [7, 8, 9, 10],\n      [6, 15, null, 11],\n      [5, 14, 13, 12],\n      [4, 3, 2, 1]\n    ],\n    emptyPos: [1, 2]\n  },\n\n  {\n    title: (<p> Around the edges <br /> from bottom up </p>),\n    grid: [\n      [7, 6, 5, 4],\n      [8, 15, 14, 3],\n      [9, null, 13, 2],\n      [10, 11, 12, 1]\n    ],\n    emptyPos: [2, 1]\n  },\n\n  {\n    title: (<p> Around the edges <br /> odd and even </p>),\n    grid: [\n      [7, 6, 5, 4],\n      [8, 15, 14, 3],\n      [9, null, 13, 2],\n      [10, 11, 12, 1]\n    ],\n    emptyPos: [2, 1]\n  },\n\n  {\n    title: (<p> Novel \"edge\" <br /> problem from center</p>),\n    grid: [\n      [4, 5, 6, 7],\n      [3, 2, 1, 8],\n      [14, 15, null, 9],\n      [13, 12, 11, 10]\n    ],\n    emptyPos: [2, 2]\n  },\n\n  {\n    title: (<p> Checkerboard 1-3-5-7 <br /> in corners </p>),\n    grid: [\n      [1, 2, 4, 3],\n      [null, 9, 11, 6],\n      [14, 13, 15, 8],\n      [5, 12, 10, 7]\n    ],\n    emptyPos: [1, 0]\n  },\n\n  {\n    title: (<p> Up and down <br /> and around </p>),\n    grid: [\n      [13, 12, 11, 10],\n      [14, 3, 4, 9],\n      [15, 2, 5, 8],\n      [null, 1, 6, 7]\n    ],\n    emptyPos: [3, 0]\n  }\n\n]\n\nexport default Answers;\n","import React, { Component } from 'react';\nimport './Options.css'; \nimport Answers from './AnswerGrids.js';\nimport Board from './Board.js';\n\nclass Options extends Component{\n  constructor(props){\n    super(props);\n\n    // Bind event handlers\n    this.handlePrevClick = this.handlePrevClick.bind(this);\n    this.handleNextClick = this.handleNextClick.bind(this);\n\n    this.totalPages =  Math.ceil(Answers.length / 4)\n\n    // Set initial state\n    this.state = { page: 1 }\n  } \n\n  handlePrevClick(){\n    const page = this.state.page;\n    this.setState({page: (page - 1)})\n  }\n\n  handleNextClick(){\n    const page = this.state.page;\n    this.setState({page: (page + 1)})\n  } \n\n  render(){\n    var prevBtnClass = ( this.state.page === 1 ? \"hidden\" : \"btn\" );\n    var nextBtnClass = ( this.state.page === this.totalPages ? \"hidden\" : \"btn\" );\n\n    var start = ((this.state.page - 1) * 4);\n\n    const row1Boards = Answers.slice(start,(start + 2)); \n    const row2Boards = Answers.slice((start + 2),(start + 4)); \n\n    const handleBoardClick = this.props.handleBoardClick;\n\n    var row1 = (\n      <div className=\"flex justify-center Options-answer-grids\"> \n        { \n          row1Boards.map( function(curr,ind){\n            var key = (start + ind);\n            return (\n              <div key={`Board ${key}`}> \n                {curr.title}\n                <Board \n                  grid={curr.grid}\n                  isClickable={true}\n                  handleBoardClick={() => {handleBoardClick(key)}}\n                  isAnswer={true}\n                />\n              </div>\n            );\n          })\n        }\n      </div> \n    );\n\n    var row2 = (\n      <div className=\"flex justify-center Options-answer-grids\">\n        {\n          row2Boards.map( function(curr,ind){\n            var key = (start + ind + 2);\n            return (\n              <div key={`Board ${key}`}>\n                {curr.title}\n                <Board \n                  grid={curr.grid}\n                  isClickable={true}\n                  handleBoardClick={() => {handleBoardClick(key)}}\n                  isAnswer={true}\n                />\n              </div>\n            );\n          })\n        }\n      </div> \n    ); \n\n    return (\n      <div className={this.props.optionsClass}> \n\n        <div className=\"Options-content\">\n          <span className=\"Options-close-btn\" onClick={this.props.handleCloseClick}>&times;</span>\n\n          <h1>Options</h1> \n\n          {row1}\n\n          {row2} \n\n          <div className=\"flex justify-center btn-container\">\n            <button className={prevBtnClass} onClick={this.handlePrevClick}> Previous</button>\n            <button className={nextBtnClass} onClick={this.handleNextClick}> Next </button> \n          </div> \n\n          <div className=\"divider\"></div>\n\n          <p> Page {this.state.page} of {this.totalPages}</p> \n\n        </div> \n      </div>\n    );\n  }\n\n}\n\nexport default Options;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css'; \nimport Game from './Game'; \nimport Answers from './AnswerGrids.js';\nimport Options from './Options'; \n\nclass App extends Component {\n  constructor(props){\n    super(props);\n\n    // Bind event handlers\n    this.handleOptionsClick = this.handleOptionsClick.bind(this); \n    this.handleCloseClick = this.handleCloseClick.bind(this);\n    this.handleBoardClick = this.handleBoardClick.bind(this);\n\n    // Set initial state\n    this.state = {\n      optionsClass: \"display-none\",\n      answerGrid: Answers[0],\n      ansInd: 0\n    } \n  }\n\n  /* Functions defined here so that Game component can open the Options component */\n  handleOptionsClick(){\n    this.setState({optionsClass: \"Options-container\"});\n  }\n\n  handleCloseClick(){\n    this.setState({optionsClass: \"display-none\"});\n  }\n\n  handleBoardClick(ind){\n    this.setState({\n      answerGrid: Answers[ind],\n      ansInd: ind,\n      optionsClass: \"display-none\"\n    });\n  }\n\n  render() { \n    return ( \n      <div className=\"App\">\n\n        <header className=\"flex App-header\">\n          <h1 className=\"App-title\">Slider Puzzle</h1>\n          <span> Created using React </span>\n          <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        </header>\n\n        <Options\n          optionsClass={this.state.optionsClass}\n          handleCloseClick={this.handleCloseClick}\n          handleBoardClick={this.handleBoardClick}\n        />\n\n        <Game \n          handleOptionsClick={this.handleOptionsClick}\n          ansInd={this.state.ansInd}\n          answerGrid={this.state.answerGrid}\n        />\n\n        <p style={{color: \"white\"}}>\n          <span id=\"instructions\">Instructions:</span> Press the arrow keys to move the tiles.\n          <br />\n          Match the grid on the left to solve the puzzle.\n          <br />\n          You can change the answer grid under <i>Options</i>\n\n        </p>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root')); \n"],"sourceRoot":""}